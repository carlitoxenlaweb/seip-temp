{% extends "PequivenSEIPBundle:Template:ExtJs/layout.html.twig" %}

{% trans_default_domain 'PequivenArrangementProgramBundle' %}

{% block stylesheet %}
    {{ parent() }}
    <style type="text/css" media="screen">
        .x-grid-row-summary .x-grid-cell-inner {
            font-weight: bold;
        }
        .icon-grid {
            background: url(../shared/icons/fam/grid.png) no-repeat 0 -1px;
        }
        .x-group-hd-container {
            display:none;
        }
    </style>
{% endblock %}

{% block javascript %}
    <script type="text/javascript">
        Ext.require([
            'Ext.grid.*',
            'Ext.data.*',
            'Ext.form.field.Number',
            'Ext.form.field.Date',
            'Ext.tip.QuickTipManager',
            'Ext.layout.container.Fit'
        ]);
        
        Ext.onReady(function(){

            Ext.tip.QuickTipManager.init();
            
            var store = Ext.create('Ext.data.Store', {
                autoLoad: true,
                autoSync: true,
                model: 'Pequiven.ArrangementProgramBundle.Entity.GoalDetails',
                groupField: 'project',
                proxy: {
                    type: 'rest',
                    url: '{{ path('get_arrangementprogram_rest_restarrangementprogram_putgoalsdetails',{id:app.request.get('id'),_format:'json'}) }}',
                    reader: {
                        type: 'json',
                        rootProperty: 'data'
                    },
                    writer: {
                        type: 'json'
                    },
                    actionMethods: {
                        update: 'POST'
                    }
                },
                listeners: {
                    write: function (store, operation) {
                        var record = operation.getRecords()[0],
                                name = Ext.String.capitalize(operation.action),
                                verb;
                        if (name == 'Destroy') {
                            verb = 'Destroyed';
                        } else {
                            verb = name + 'd';
                        }
        {#                        Ext.example.msg(Translator.trans(name), Ext.String.format("{{ "pequiven.goals.goal"|trans }} {1} {0}", Translator.trans(verb), record.getId()));#}

                        },
                        update: function (store, record, operation, modifiedFieldNames, eOpts) {
                            if (Ext.data.Model.EDIT == operation) {
                                store.getProxy().setExtraParam("_method", "PUT");
                            } else if (Ext.data.Model.COMMIT == operation) {
                                delete store.getProxy().getExtraParams()["_method"];
                            }
                        }
                    }
                });
                /**
                 * Formatea un numero a dos decimales
                 * @param {type} val
                 * @returns {unresolved}
                 */
                var formatNumber = function (val) {
                    return Ext.util.Format.number(Ext.util.Format.number(val, '0.000,00/i'));
                };

                /**
                 * Calcula el promedio de los valores planeados de una fila
                 * @param {type} data
                 * @returns {form.html_L11.calculateAverageRow.value}             */
                var calculateAverageRow = function (data,property) {
                    var key;
                    var value = 0;
                    for (key in data) {
                        if (key.match(property)) {
                            value = value + data[key];
                        }
                    }
                    return value;
                };
                
                var summaryTypeOfSummary  = function (records,property){
                    var i, length, data, average, total, subAverage;
                                length = records.length;
                                total = 0;
                                for (i = 0; i < length; i++) {
                                    data = records[i].data;
                                    subAverage = calculateAverageRow(data,property);
                                    total = total + subAverage;
                                }
                                average = 0;
                                if (total > 0) {
                                    average = total / length;
                                }
                                return average;
                };

                /**
                 * Custom function used for column renderer
                 * @param {Object} val
                 */
                function valGoalDetails(val, metaData, record, rowIndex, colIndex, store) {
                    var columnName = grid.columns[colIndex + 6].dataIndex;
                    var data = record.data;
                    if (data._data[columnName] != undefined) {
                        var extraData = data._data[columnName];
                        if (extraData['isEnabled'] != undefined) {
                            if (extraData.isEnabled == false) {
                                metaData.css = 'td-bg-disabled';
                                return val;
                            }
                        }
                    }
                    if (val > 0) {
                        return '<span style="color:green;">' + formatNumber(val) + '</span>';
                    } else if (val < 0) {
                        return '<span style="color:red;">' + val + '</span>';
                    }
                    return val;
                }
                /**
                 * Calcula el resumen de lo planeado y real 
                 */
                var calculateSummaryRenderer = function (records, values, nameField) {
                    var i = 0,
                            length = records.length,
                            total = 0,
                            record,
                            val;
                    for (; i < length; ++i) {
                        record = records[i];
                        val = record.get(nameField);
                        if (val > 0) {
                            total += (record.get('goalWeight') / 100) * val;
                        }
                    }
                    return total;
                };

                /**
                 
                 * @param {type} value
                 * @param {type} summaryData
                 * @param {type} dataIndex
                 * @returns {unresolved}          * Formatea los numeros del resumen
                 */
                var valSummaryRenderer = function (value, summaryData, dataIndex) {
                    return formatNumber(value);
                };

                var cellEditing = Ext.create('Ext.grid.plugin.CellEditing', {
                    clicksToEdit: 1,
                    listeners: {
                        cancelEdit: function (rowEditing, context) {
                            // Canceling editing of a locally added, unsaved record: remove it
                            if (context.record.phantom) {
                                store.remove(context.record);
                            }
                        },
                        beforeedit: function (editor, context, eOpts) {
                            var columnName = context.field;
                            var data = context.record.data;
                            if (data._data[columnName] != undefined) {
                                var extraData = data._data[columnName];
                                if (extraData['isEnabled'] != undefined) {
                                    if (extraData.isEnabled == false) {
                                        return false;
                                    }
                                }
                            }
                            return true;
                        }
                    }
                });
                var fieldTypeProperties = {
                    xtype: 'numberfield',
                    minValue: 0,
                    maxValue: 100
                };

                var widthColumnValues = 60;
                var grid = Ext.create('Ext.grid.Panel', {
                    selType: 'cellmodel',
                    renderTo: 'grid-example-2',
                    plugins: [cellEditing],
                    height: 580,
                    frame: true,
                    title: '{{ "pequiven.goals.goals"|trans }}',
                    store: store,
                    iconCls: 'icon-user',
                    listeners: {
                        beforeedit: function (editor, context, eOpts) {
        {#context.grid.columns[4].field.xtype="displayfield";
        context.grid.columns[5].field.xtype="displayfield";#}
                            //context.grid.columns[5].disable();
                            //context.grid.reconfigure();

        {#console.log(editor);
        console.log(context);
        console.log(eOpts);
        console.log(editor.form);#}
                            //return false;
                        }
                    },
                    features: [{
                            id: 'group',
                            ftype: 'groupingsummary',
                            groupHeaderTpl: '{name}',
                            hideGroupedHeader: true,
                            enableGroupingMenu: false
                        }],
                    columns: [{
                            text: 'Nro',
                            width: 30,
                            sortable: true,
                            locked: true,
                            renderer: function (v, meta, rec, rowIndex) {
                                return ++rowIndex;
                            }
                        }, {
                            text: '{{ "pequiven.name"|trans({},"messages") }}',
                            flex: 1,
                            sortable: true,
                            dataIndex: 'name',
                            locked: true,
                            hideable: false,
                            renderer: function (v, m, r) {
                                var d = r.data.goal.name;
                                return d;
                            },
                            summaryType: 'count',
                            summaryRenderer: function (value, summaryData, dataIndex) {
                                return ((value === 0 || value > 1) ? '' + value + ' {{ 'pequiven.goals.goals_only'|trans }}' : '1 {{ 'pequiven.goals.goal'|trans }}');
                            }
                        }, {
                            header: '{{ "pequiven.start_date"|trans({},"messages") }}',
                            width: 80,
                            sortable: true,
                            dataIndex: 'goalDateStart',
                            locked: true,
                            renderer: function (v, m, r) {
                                var d = r.data.goal.startDate;
                                return Ext.util.Format.date(d, 'Y-m-d');
                            },
                            summaryType: 'min',
                            summaryRenderer: Ext.util.Format.dateRenderer('Y-m-d')
                        }, {
                            text: '{{ "pequiven.end_date"|trans({},"messages") }}',
                            width: 80,
                            sortable: true,
                            dataIndex: 'goalDateEnd',
                            locked: true,
                            renderer: function (v, m, r) {
                                var d = r.data.goal.endDate;
                                return Ext.util.Format.date(d, 'Y-m-d');
                            },
                            summaryType: 'max',
                            summaryRenderer: Ext.util.Format.dateRenderer('Y-m-d')
                        }, {text: '{{ "pequiven.weight_goal"|trans({},"messages") }}',
                            sortable: true,
                            width: 60,
                            dataIndex: 'goalWeight',
                            locked: true,
                            renderer: function (v, m, r) {
                                var d = r.data.goal.weight;
                                return d;
                            },
                            summaryType: 'sum'
                        }, {
                            text: '{{ 'pequiven.quarter.first'|trans({},'messages') }}',
                            columns: [
                                {
                                    text: '{{ "pequiven.months.january"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            sortable: true,
                                            groupable: false,
                                            align: 'center',
                                            dataIndex: 'januaryPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'januaryPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'januaryReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'januaryReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                },
                                {
                                    text: '{{ "pequiven.months.february"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            baseCls: 'bg-column-gray',
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'februaryPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'februaryPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'februaryReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'februaryReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                },
                                {
                                    text: '{{ "pequiven.months.march"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'marchPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'marchPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'marchReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'marchReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                }
                            ]
                        }, {
                            text: '{{ 'pequiven.quarter.second'|trans({},'messages') }}',
                            columns: [
                                {
                                    text: '{{ "pequiven.months.april"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'aprilPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'aprilPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'aprilReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'aprilReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                },
                                {
                                    text: '{{ "pequiven.months.may"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'mayPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'mayPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'mayReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'mayReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                },
                                {
                                    text: '{{ "pequiven.months.june"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'junePlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'junePlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'juneReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'juneReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            text: '{{ 'pequiven.quarter.third'|trans({},'messages') }}',
                            columns: [
                                {
                                    text: '{{ "pequiven.months.july"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'julyPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'julyPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'julyReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'julyReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                },
                                {
                                    text: '{{ "pequiven.months.august"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'augustPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'augustPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'augustReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'augustReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                }, {
                                    text: '{{ "pequiven.months.september"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'septemberPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'septemberPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'septemberReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'septemberReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            text: '{{ 'pequiven.quarter.fourth'|trans({},'messages') }}',
                            columns: [
                                {
                                    text: '{{ "pequiven.months.october"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'octoberPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'octoberPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'octoberReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'octoberReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                }, {
                                    text: '{{ "pequiven.months.november"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'novemberPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'novemberPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'novemberReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'novemberReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                }, {
                                    text: '{{ "pequiven.months.december"|trans({},"messages") }}',
                                    columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            dataIndex: 'decemberPlanned',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'decemberPlanned';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            dataIndex: 'decemberReal',
                                            renderer: valGoalDetails,
                                            field: fieldTypeProperties,
                                            summaryType: function (records, values) {
                                                var nameField = 'decemberReal';
                                                return calculateSummaryRenderer(records, values, nameField);
                                            },
                                            summaryRenderer: valSummaryRenderer
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            text: '{{ "pequiven.goals.summary"|trans }}',
                            locked: true,
                            hideable: false,
                            columns: [
                                        {
                                            text: '{{ "pequiven.goals.abbr_planned"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            baseCls: 'bg-column-gray',
                                            align: 'center',
                                            renderer: function (v, m, r) {
                                                var data = m.record.data;
                                                return formatNumber(calculateAverageRow(data,'Planned')) + "%";
                                            },
                                            summaryType: function (records, values) {
                                                return summaryTypeOfSummary(records,'Planned');
                                            },
                                            summaryRenderer: function (value, summaryData, dataIndex) {
                                                return formatNumber(value) + '%';
                                            }
                                        }, {
                                            text: '{{ "pequiven.goals.abbr_real"|trans }}',
                                            sortable: true,
                                            groupable: false,
                                            width: widthColumnValues,
                                            align: 'center',
                                            renderer: function (v, m, r) {
                                                var data = m.record.data;
                                                return formatNumber(calculateAverageRow(data,'Real')) + "%";
                                            },
                                            summaryType: function (records, values) {
                                                return summaryTypeOfSummary(records,'Real');
                                            },
                                            summaryRenderer: function (value, summaryData, dataIndex) {
                                                return formatNumber(value) + '%';
                                            }
                                        }
                                    ]
                        }
                    ]
                });
            });
    </script>
{% endblock javascript %}
{% block content %}
    <div id="grid-example-2"></div>
{% endblock content %}