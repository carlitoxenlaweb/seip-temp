<?php

namespace Pequiven\ArrangementProgramBundle\Repository;

use Pequiven\SEIPBundle\Entity\Period;
use Pequiven\SEIPBundle\Entity\User;
use Tecnocreaciones\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository;

/**
 * GoalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GoalRepository extends EntityRepository {

    /**
     * Retorna las metas del usuario en los programa de gestion donde no es responsable
     * @param User $user
     * @param Period $period
     * @param array $criteria
     * @return type
     */
    function findGoalsByUserAndPeriod(User $user, Period $period, array $criteria = array()) {
        $qb = $this->getQueryBuilder();
        $qb
                ->innerJoin('g.timeline', 't')
                ->innerJoin('g.responsibles', 'g_r')
                ->innerJoin('t.arrangementProgram', 'ap')
                ->innerJoin('ap.responsibles', 'ap_r')
                ->andWhere('ap_r.id != :responsible')
                ->andWhere('ap.period = :period')
                ->andWhere('g_r.id = :responsible')
                ->andWhere('ap.status != :status')
                ->setParameter('period', $period)
                ->setParameter('responsible', $user)
                ->setParameter('status', \Pequiven\ArrangementProgramBundle\Entity\ArrangementProgram::STATUS_REJECTED);
        ;
        if (isset($criteria['notArrangementProgram'])) {
            $qb->andWhere('ap.id != :arrangementProgram');
            $qb->setParameter('arrangementProgram', $criteria['notArrangementProgram']);
        }
        return $qb->getQuery()->getResult();
    }

    /**
     * Retorna los Usuarios Asignados a una Meta en EspecÃ­fica. Usada por RemoveGoalType.php
     * @param int $idGoal
     * @param array $criteria
     */
    function findQuerytoRemoveAssingedGoal() {
        $qb = $this->getQueryBuilder();

        $qb
                ->select('g')
////                ->innerJoin('g.responsibles', 'user')
////                ->innerJoin('user.groups', 'group')
////                ->andWhere('user.enabled = :enabled')
////                ->andWhere('group.typeRol = :typeRol')
////               // ->andWhere('g.id = :goallist')
////                ->setParameter('enabled', true)
////                ->setParameter('typeRol', \Pequiven\MasterBundle\Entity\Rol::TYPE_ROL_OWNER)
////               // ->setParameter('goallist', $idGoal)
//        ;
//        $qb
//                ->andWhere('group.level <= :level')
//                ->setParameter('level', \Pequiven\MasterBundle\Entity\Rol::ROLE_DIRECTIVE)
                ;
        return $qb;
    }

    protected function getAlias() {
        return 'g';
    }

}
