{% extends 'PequivenSEIPBundle:Template:Developer/Common/formLayoutShow.html.twig' %}

{% trans_default_domain 'PequivenIndicatorBundle' %}

{% import 'PequivenSEIPBundle:Template:Developer/Macros/buttons.html.twig' as buttons %}


{% block before_body %}
    {{ contentHeader("Resumen de Gestion") }}
{% endblock %}

{% block body -%}
    <div ng-controller="ReportArrangementProgramAllController">
        <fieldset class="fieldset">
            <legend class="legend" >Consulta de Gestion</legend>
            <div class="new-row-tablet new-row-mobile six-columns twelve-columns-tablet">
                <label class="bold">{{ 'pequiven_seip.filters.user_selection'|trans({},'PequivenSEIPBundle') }}</label>
                <br/>
                <div class="with-mid-padding">
                    <input type="text" name="responsiblesGoals" id="responsiblesGoals" ng-model="model.responsiblesGoals" style='width: 270px' />
                </div>
            </div>
        </fieldset>
    </div>
{% endblock %}

{% block javascript %}

    <script type="text/javascript">
        $(document).ready(function () {


            var urlResponsibles = '{{ path('pequiven_user_search') }}';
            var parametersSelectResponsibles = {
                minimumInputLength: 1,
                multiple: false,
                allowClear: true,
                ajax: {// instead of writing the function to execute the request we use Select2's convenient helper
                    url: urlResponsibles,
                    dataType: 'json',
                    quietMillis: 250,
                    data: function (term, page) {
                        return {
                            query: term, // search term
                        };
                    },
                    results: function (data, page) { // parse the results into the format expected by Select2.
                        // since we are using custom formatting functions we do not need to alter the remote JSON data
                        return {results: data};
                        //console.log(data);
                    },
                    cache: true
                },
                initSelection: function (element, callback) {
                },
                formatResult: responsiblesFormatResult, // omitted for brevity, see the source of this page
                formatSelection: responsiblesFormatResult, // omitted for brevity, see the source of this page
                escapeMarkup: function (m) {
                    return m;
                } // we do not want to escape markup since we are displaying html in results
            };

            $('#responsiblesGoals').select2(parametersSelectResponsibles);
        });

    </script>
{% endblock %}