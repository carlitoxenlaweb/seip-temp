<?php

namespace Pequiven\SEIPBundle\Repository\Politic;

use Pequiven\SEIPBundle\Entity\Politic\WorkStudyCircle;
use Pequiven\SEIPBundle\Entity\Period;
use Pequiven\SEIPBundle\Entity\User;
use Pequiven\SEIPBundle\Doctrine\ORM\SeipEntityRepository as EntityRepository;

/**
 * Repositorio del CÃ­rculo de Estudio de Trabajo
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WorkStudyCircleRepository extends EntityRepository
{
    
    /**
     * Crea un paginador para los Circulos de Estudio y Trabajo
     * 
     * @param array $criteria
     * @param array $orderBy
     * @return \Doctrine\DBAL\Query\QueryBuilder
     */
    public function createPaginatorByWorkStudyCircle(array $criteria = null, array $orderBy = null) {
        $queryBuilder = $this->getCollectionQueryBuilder();
        $criteria = new \Doctrine\Common\Collections\ArrayCollection($criteria);
        
        if (($complejo = $criteria->remove('complejo'))) {
            $queryBuilder
                    ->andWhere('wsc.complejo = :complejo')
                    ->setParameter('complejo', $complejo)
                ;
        }
        
        if (($gerencia = $criteria->remove('firstLineManagement'))) {
            $queryBuilder
                    ->innerJoin('wsc.gerencias', 'g')
                    ->andWhere('g.id = :gerencia')
                    ->setParameter('gerencia', $gerencia)
                ;
        }
        
        if (($gerenciaSecond = $criteria->remove('secondLineManagement'))) {
            $queryBuilder
                    ->innerJoin('wsc.gerenciaSeconds', 'gs')
                    ->andWhere('gs.id = :gerenciaSecond')
                    ->setParameter('gerenciaSecond', $gerenciaSecond)
                ;
        }
        
        $queryBuilder->orderBy('wsc.name');
        
//        $orderBy['wsc.name'] = 'ASC';
        
        return $this->getPaginator($queryBuilder);
    }
    
    protected function applyCriteria(\Doctrine\ORM\QueryBuilder $queryBuilder, array $criteria = null) {
        $criteria = new \Doctrine\Common\Collections\ArrayCollection($criteria);
        
//        parent::applyCriteria($queryBuilder, $criteria->toArray());
//        $this->applyPeriodCriteria($queryBuilder);
        return parent::applyCriteria($queryBuilder, $criteria->toArray());
    }
    
    protected function getAlias() {
        return 'wsc';
    }
}