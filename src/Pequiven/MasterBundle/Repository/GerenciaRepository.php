<?php

namespace Pequiven\MasterBundle\Repository;

use Doctrine\ORM\EntityRepository;

use Tecnocreaciones\Bundle\ResourceBundle\Doctrine\ORM\EntityRepository as baseEntityRepository;
/**
 * GerenciaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GerenciaRepository extends baseEntityRepository
{
    public function getGerenciaOptions($options = array()){
        $data = array();
        
        $em = $this->getEntityManager();
        $query = $em->createQueryBuilder()
                        ->select('g')
                        ->from('\Pequiven\MasterBundle\Entity\Gerencia', 'g')
                        ->andWhere('g.enabled = ' . 1);
//        var_dump($options);
//        var_dump("<br>");
//        var_dump(count($options['complejos']));
//        die();
        if(isset($options['complejoArray'])){
            $search = '';
            $total = count($options['complejoArray']);
            for($i=0;$i<$total;$i++){
                if($i == ($total-1)){
                    $search .= $options['complejoArray'][$i];
                } else{
                    $search .= $options['complejoArray'][$i].',';
                }
            }
            $query->andWhere('g.complejo IN (' . $search .')');
        } elseif(isset($options['complejos']) && $options['complejos'] != 0){
            $query->andWhere('g.complejo IN (' . $options['complejos'] .')');
        }
        
        
        $gerencias = $query->getQuery()
                           ->getResult();
        
        foreach($gerencias as $gerencia){
            if(!$gerencia->getComplejo()){
                continue;
            } 
            if(!array_key_exists($gerencia->getComplejo()->getDescription(), $data)){
                $data[$gerencia->getComplejo()->getDescription()] = array();
            }
            
            $data[$gerencia->getComplejo()->getDescription()][$gerencia->getId()] = $gerencia;
        }
        
        return $data;
    }
    
     /**
     * Crea un paginador para las gerencias de 1ra lÃ­nea
     * 
     * @param array $criteria
     * @param array $orderBy
     * @return \Doctrine\DBAL\Query\QueryBuilder
     */
    function createPaginatorGerenciaFirst(array $criteria = null, array $orderBy = null) {
        $queryBuilder = $this->getCollectionQueryBuilder();

        if(isset($criteria['description'])){
            $description = $criteria['description'];
            unset($criteria['description']);
            $queryBuilder->andWhere($queryBuilder->expr()->like('o.description', "'%".$description."%'"));
        }
//        if(isset($criteria['rif'])){
//            $rif = $criteria['rif'];
//            unset($criteria['rif']);
//            $queryBuilder->andWhere($queryBuilder->expr()->like('o.rif', "'%".$rif."%'"));
//        }
//var_dump($queryBuilder->getQuery()->getSQL());
//die();
        $this->applyCriteria($queryBuilder, $criteria);
        $this->applySorting($queryBuilder, $orderBy);
        
        return $this->getPaginator($queryBuilder);
    }
}