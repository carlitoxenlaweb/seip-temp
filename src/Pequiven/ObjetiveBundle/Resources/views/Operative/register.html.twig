{#{% extends 'TecnocreacionesVzlaGovernmentBundle:Template:Developer/layout.html.twig' %}#}
{% extends 'PequivenSEIPBundle:Template:Developer/Common/formLayout.html.twig' %}

{% trans_default_domain 'PequivenObjetiveBundle' %}

{% import 'PequivenSEIPBundle:Template:Developer/Macros/actions.html.twig' as actions %}

{% block javascripts_base %}
    {{ parent() }}
    <!-- JavaScript at the bottom for fast page loading -->
    <!-- Scripts -->
    <script src="{{ asset('bundles/tecnocreacionesvzlagovernment/template/developer/js/libs/jquery-1.8.2.min.js') }}"></script>
    <script src="{{ asset('bundles/tecnocreacionesvzlagovernment/template/developer/js/setup.js') }}"></script>
{% endblock javascripts_base %}

{% block body %}

    <hgroup id="main-title" class="thin breadcrumb">
        <h1>
            <a href="#">{{ 'pequiven_objetive.objetives'|trans }}</a>
            <span class="icon-forward"></span>
            <span class="thin">{{ 'pequiven_objetive.add'|trans }}</span>
            <span class="icon-forward"></span>
            <span class="thin">{{ 'pequiven_objetive.operative'|trans }}</span>
        </h1>
    </hgroup>
    
    <form action="{{ path('pequiven_objetive_menu_add_operative') }}" {{ form_enctype(form) }} method="POST">
        <fieldset class="fieldset fields-list">
            <legend class="legend">{{ 'pequiven_objetive.objetives'|trans }}</legend>
            <!-- Hidden con "ComplejoName" de la persona que esta logueada -->
            <div>
                {{ form_widget(form.complejo_name) }}
            </div>
            
            <!-- Hidden con "RoleName" de la persona que esta logueada -->
            <div>
                {{ form_widget(form.role_name) }}
            </div>
                
            <!-- Línea Estratégica -->
            <div id="lineStrategic" class="field-block button-height">
                {{ form_label(form.lineStrategic) }}
                {{ form_widget(form.lineStrategic) }}
                {{ form_errors(form.lineStrategic) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.lineStrategic_info'|trans }}</span>
                </span>
            </div>
                
            <!-- Objetivo Estratégico (Padre) -->
            <div class="field-block button-height">
                {{ form_label(form.parent_strategic) }}
                {{ form_widget(form.parent_strategic) }}
                {{ form_errors(form.parent_strategic) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.parent_strategic_info'|trans }}</span>
                </span>
            </div>
                
            <!-- Objetivo Táctico (Padre) -->
            <div class="field-block button-height">
                {{ form_label(form.parent) }}
                {{ form_widget(form.parent) }}
                {{ form_errors(form.parent) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.parent_tactic_info'|trans }}</span>
                </span>
            </div>
            
            <!-- Complejo -->
            <div id="complejo" class="field-block button-height">
                {{ form_label(form.complejo) }}
                {{ form_widget(form.complejo) }}
                {{ form_errors(form.complejo) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.complejo_info'|trans }}</span>
                </span>
            </div>
            
            <!-- Gerencia -->
            <div id="gerencia" class="field-block button-height">
                {{ form_label(form.gerencia) }}
                {{ form_widget(form.gerencia) }}
                {{ form_errors(form.gerencia) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.gerencia_info'|trans }}</span>
                </span>
            </div>
            
            <!-- Gerencia 2da Línea -->
            <div id="gerenciaSecond" class="field-block button-height">
                {{ form_label(form.gerenciaSecond) }}
                {{ form_widget(form.gerenciaSecond) }}
                {{ form_errors(form.gerenciaSecond) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.gerencia_second_info'|trans }}</span>
                </span>
                {% if (role_name == 'ROLE_DIRECTIVE') or (role_name == 'ROLE_DIRECTIVE_AUX') or (role_name == 'ROLE_MANAGER_FIRST') or (role_name == 'ROLE_MANAGER_FIRST_AUX') %}
                <span id="view_check_gerencia">
                    {{ 'form.question.allGerenciasSecondFull'|trans }}
                    {{ form_widget(form.check_gerencia) }}
                </span>
                {% endif %}
            </div>
                
            <!-- Descripción -->
            <div class="field-block button-height">
                {{ form_label(form.description) }}
                {{ form_widget(form.description) }}
                {{ form_errors(form.description) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.description_info'|trans }}</span>
                </span>
            </div>
                
            <!-- Ref -->
            <div id="ref" class="field-block button-height">
                {{ form_label(form.ref) }}
                {{ form_widget(form.ref) }}
                {{ form_errors(form.ref) }}
                <span id="ref_info" class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.ref_info'|trans }}</span>
                </span>
            </div>
            
            <!-- Peso del Objetivo -->
            <div id="weight" class="field-block button-height">
                {{ form_label(form.weight) }}
                {{ form_widget(form.weight) }}
                {{ form_errors(form.weight) }}
                <span class="info-spot">
                    <span class="icon-info-round"></span>
                    <span class="info-bubble">{{ 'form.weight_info'|trans }}</span>
                </span>
            </div>
                
            <!-- Meta del Objetivo -->
            <div class="field-block button-height">
                    {{ form_label(form.goal) }}
                    {{ form_widget(form.goal) }}
                    {{ form_errors(form.goal) }}
                    <span class="info-spot">
                        <span class="icon-info-round"></span>
                        <span class="info-bubble">{{ 'form.goal_info'|trans }}</span>
                    </span>
            </div>

            <!-- Rango de Gestión Alto -->
            <fieldset class="fieldset">
                <legend class="legend">{{ 'form.rankArrangementTop'|trans }}</legend>
                <div class="field-block button-height">
                    {{ form_widget(form.typeArrangementRangeTypeTop) }}
                    {{ form_label(form.arrangementRangeTypeTop) }}
                    <span class="info-spot">
                        <span class="icon-info-round"></span>
                        <span class="info-bubble">{{ 'form.arrangementRangeType_info'|trans }}</span>
                    </span>
                    {{ form_widget(form.arrangementRangeTypeTop) }}

                    <span id="sectionTopBasic">
                        {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankTop) }} {{ form_widget(form.rankTop) }}
                    </span>
                    <span id="sectionTopCompound">
                        <div id="rangeTopTop">
                            {{ 'form.rankTopTop_info'|trans }}</br>
                            {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankTopTopTop) }} {{ form_widget(form.rankTopTopTop) }} y {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankTopTopBottom) }} {{ form_widget(form.rankTopTopBottom) }}
                        </div>
                        <div id="rangeTopBottom">
                            {{ 'form.rankTopBottom_info'|trans }}</br>
                            {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankTopBottomTop) }} {{ form_widget(form.rankTopBottomTop) }} y {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankTopBottomBottom) }} {{ form_widget(form.rankTopBottomBottom) }}
                        </div>
                    </span>
                </div>
            </fieldset>
                    
            <!-- Rango de Gestión Medio -->
            <fieldset class="fieldset">
                <legend class="legend">{{ 'form.rankArrangementMiddle'|trans }}</legend>
                <div class="field-block button-height">
                    {{ form_widget(form.typeArrangementRangeTypeMiddle) }}
                    {{ form_label(form.arrangementRangeTypeMiddle) }}
                    <span class="info-spot">
                        <span class="icon-info-round"></span>
                        <span class="info-bubble">{{ 'form.arrangementRangeType_info'|trans }}</span>
                    </span>
                    {{ form_widget(form.arrangementRangeTypeMiddle) }}

                    <span id="sectionMiddleBasic">
                        {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankMiddleTop) }} {{ form_widget(form.rankMiddleTop) }} y {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankMiddleBottom) }} {{ form_widget(form.rankMiddleBottom) }}
                    </span>
                    <span id="sectionMiddleCompound">
                        <div id="rangeMiddleTop">
                            {{ 'form.rankMiddleTop_info'|trans }}</br>
                            {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankMiddleTopTop) }} {{ form_widget(form.rankMiddleTopTop) }} y {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankMiddleTopBottom) }} {{ form_widget(form.rankMiddleTopBottom) }}
                        </div>
                        <div id="rangeMiddleBottom">
                            {{ 'form.rankMiddleBottom_info'|trans }}</br>
                            {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankMiddleBottomTop) }} {{ form_widget(form.rankMiddleBottomTop) }} y {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankMiddleBottomBottom) }} {{ form_widget(form.rankMiddleBottomBottom) }}
                        </div>
                    </span>
                </div>
            </fieldset>                    
            
            <!-- Rango de Gestión Bajo -->
            <fieldset class="fieldset">
                <legend class="legend">{{ 'form.rankArrangementBottom'|trans }}</legend>
                <div class="field-block button-height">
                    {{ form_widget(form.typeArrangementRangeTypeBottom) }}
                    {{ form_label(form.arrangementRangeTypeBottom) }}
                    <span class="info-spot">
                        <span class="icon-info-round"></span>
                        <span class="info-bubble">{{ 'form.arrangementRangeType_info'|trans }}</span>
                    </span>
                    {{ form_widget(form.arrangementRangeTypeBottom) }}

                    <span id="sectionBottomBasic">
                        {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankBottom) }} {{ form_widget(form.rankBottom) }}
                    </span>
                    <span id="sectionBottomCompound">
                        <div id="rangeBottomTop">
                            {{ 'form.rankBottomTop_info'|trans }}</br>
                            {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankBottomTopTop) }} {{ form_widget(form.rankBottomTopTop) }} y {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankBottomTopBottom) }} {{ form_widget(form.rankBottomTopBottom) }}
                        </div>
                        <div id="rangeBottomBottom">
                            {{ 'form.rankBottomBottom_info'|trans }}</br>
                            {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankBottomBottomTop) }} {{ form_widget(form.rankBottomBottomTop) }} y {{ 'form.textResObj'|trans }}{{ form_widget(form.opRankBottomBottomBottom) }} {{ form_widget(form.rankBottomBottomBottom) }}
                        </div>
                    </span>
                </div>
            </fieldset>
                
            <!-- Tipo de Evaluación -->
            <fieldset class="fieldset">
                <legend class="legend">{{ 'form.typeEvaluation'|trans }}</legend>
                
                <!-- Por Indicador -->
                <div class="field-block button-height">
                    {{ form_label(form.evalIndicator) }}
                    {{ form_widget(form.evalIndicator) }}
                    {{ form_errors(form.evalIndicator) }}
                    <span class="info-spot">
                        <span class="icon-info-round"></span>
                        <span class="info-bubble">{{ 'form.evalIndicator_info'|trans }}</span>
                    </span>
                    <span id="button_add_indicator">
                        <button type="button" class="button red-gradient glossy" onclick="openAlert()">{{ 'pequiven_objetive.registerIndicator'|trans }}</button>
                    </span>
                    <span id="choice_line_strategic">
                        {{ 'form.messages.pleaseChoiceALineStrategic'|trans }}
                    </span>
                    <span id="choice_objetive_strategic">
                        {{ 'form.messages.pleaseChoiceAObjetiveStrategic'|trans }}
                    </span>
                    <span id="choice_objetive_tactic">
                        {{ 'form.messages.pleaseChoiceAObjetiveTactic'|trans }}
                    </span>
                </div>
                    
                <!-- Por Programa de Gestión -->
                <div class="field-block button-height">
                    {{ form_label(form.evalArrangementProgram) }}
                    {{ form_widget(form.evalArrangementProgram) }}
                    {{ form_errors(form.evalArrangementProgram) }}
                    <span class="info-spot">
                        <span class="icon-info-round"></span>
                        <span class="info-bubble">{{ 'form.evalArrangementProgram_info'|trans }}</span>
                    </span>
                </div>
            </fieldset>
                    
            <!-- Añadir Indicadores -->
            <fieldset id="indicators" class="fieldset">
                <legend class="legend">{{ 'form.addIndicators'|trans }}</legend>
                <!-- Añadir Indicadores -->
                <div class="field-block button-height">
                    {{ form_label(form.indicators) }}
                    {{ form_widget(form.indicators) }}
                    {{ form_errors(form.indicators) }}
                    <span class="info-spot">
                        <span class="icon-info-round"></span>
                        <span class="info-bubble">{{ 'form.indicators_info'|trans }}</span>
                    </span>
                </div>
            </fieldset>                    
            
            {{ actions.create() }}
        </fieldset>
    {{ form_rest(form) }}
    </form>
    
    {% block javascript %}
        <script type="text/javascript">
        $(document).ready(function()
        {
            
            var buttonAddIndicator = $('#button_add_indicator'),//Botón de Añadir Indicador
                messageLineStrategicCheckIndicator = $('#choice_line_strategic'),//Mensaje en caso de que no se haya seleccionado una Línea Estratégica
                messageObjetiveStrategicCheckIndicator = $('#choice_objetive_strategic'),//Mensaje en caso de que no se haya seleccionado un Objetivo Estratégico
                messageObjetiveTacticCheckIndicator = $('#choice_objetive_tactic'),//Mensaje en caso de que no se haya seleccionado un Objetivo Táctico
                sectionCheckGerencia = $("#view_check_gerencia"),//Sección dónde está el check para seleccionar las gerencias de los complejos que esten seleccionados
                sectionIndicators = $('#indicators'),//Sección dónde esta el select de Indicadores
                selectLineStrategic = $("#pequiven_objetive_operative_registration_lineStrategic"),//Select de Línea Estratégica
                selectObjetiveStrategic = $("#pequiven_objetive_operative_registration_parent_strategic"),//Select de Objetivo Estratégico
                selectObjetiveTactic = $("#pequiven_objetive_operative_registration_parent"),//Select de Objetivo Táctico
                selectComplejo = $("#pequiven_objetive_operative_registration_complejo"),//Select Complejo
                selectGerencia = $("#pequiven_objetive_operative_registration_gerencia"),//Select de Gerencia
                selectGerenciaSecond = $("#pequiven_objetive_operative_registration_gerenciaSecond"),//Select de Gerencia 2da Línea
                selectIndicators = $("#pequiven_objetive_operative_registration_indicators"),//Select de Indicadores
                inputRef = $("#pequiven_objetive_operative_registration_ref"),//Input de Ref
                inputGoal = $("#pequiven_objetive_operative_registration_goal"),//Input de Meta
                inputWeight = $("#pequiven_objetive_operative_registration_weight"),//Input de Peso
                inputHiddenComplejoName = $("#pequiven_objetive_operative_registration_complejo_name"),//Input Hidden del Nombre del Complejo del usuario logueado
                inputHiddenRoleName = $("#pequiven_objetive_operative_registration_role_name"),//Input Hidden del Nombre del Rol del usuario logueado
                checkIndicator = $("#pequiven_objetive_operative_registration_evalIndicator"),//Check de Evaluar por Indicador
                checkGerencia = $("#pequiven_objetive_operative_registration_check_gerencia"),//Check para seleccionar todas las gerencia asociadas a los complejos seleccionados
                selectArrangementRangeTypeTop = $("#pequiven_objetive_operative_registration_arrangementRangeTypeTop"),//Select de Tipo de Rango Alto
                selectArrangementRangeTypeMiddle = $("#pequiven_objetive_operative_registration_arrangementRangeTypeMiddle"),//Select de Tipo de Rango Alto
                selectArrangementRangeTypeBottom = $("#pequiven_objetive_operative_registration_arrangementRangeTypeBottom"),//Select de Tipo de Rango Alto
                sectionTopBasic = $("#sectionTopBasic"),//Input Hidden de la Referencia del Objetivo
                sectionTopCompound = $("#sectionTopCompound"),//Input Hidden de la Referencia del Objetivo
                sectionMiddleBasic = $("#sectionMiddleBasic"),//Input Hidden de la Referencia del Objetivo
                sectionMiddleCompound = $("#sectionMiddleCompound"),//Input Hidden de la Referencia del Objetivo
                sectionBottomBasic = $("#sectionBottomBasic"),//Input Hidden de la Referencia del Objetivo
                sectionBottomCompound = $("#sectionBottomCompound"),//Input Hidden de la Referencia del Objetivo
                inputHiddenTypeArrangementRangeTop = $("#pequiven_objetive_operative_registration_typeArrangementRangeTypeTop"),//Input Hidden del tipo de rango de gestión alto
                inputHiddenTypeArrangementRangeMiddle = $("#pequiven_objetive_operative_registration_typeArrangementRangeTypeMiddle"),//Input Hidden del tipo de rango de gestión medio
                inputHiddenTypeArrangementRangeBottom = $("#pequiven_objetive_operative_registration_typeArrangementRangeTypeBottom"),//Input Hidden del tipo de rango de gestión bajo
                inputRankTop = $("#pequiven_objetive_operative_registration_rankTop"),//Input de rankTop
                inputRankTopTopTop = $("#pequiven_objetive_operative_registration_rankTopTopTop"),//Input de rankTopTopTop
                inputRankTopTopBottom = $("#pequiven_objetive_operative_registration_rankTopTopBottom"),//Input de rankTopTopBottom
                inputRankTopBottomTop = $("#pequiven_objetive_operative_registration_rankTopBottomTop"),//Input de rankTopBottomTop
                inputRankTopBottomBottom = $("#pequiven_objetive_operative_registration_rankTopBottomBottom"),//Input de rankTopBottomBottom
                inputRankMiddleTop = $("#pequiven_objetive_operative_registration_rankMiddleTop"),//Input de rankMiddleTop
                inputRankMiddleBottom = $("#pequiven_objetive_operative_registration_rankMiddleBottom"),//Input de rankMiddleBottom
                inputRankMiddleTopTop = $("#pequiven_objetive_operative_registration_rankMiddleTopTop"),//Input de rankMiddleTopTop
                inputRankMiddleTopBottom = $("#pequiven_objetive_operative_registration_rankMiddleTopBottom"),//Input de rankMiddleTopBottom
                inputRankMiddleBottomTop = $("#pequiven_objetive_operative_registration_rankMiddleBottomTop"),//Input de rankMiddleBottomTop
                inputRankMiddleBottomBottom = $("#pequiven_objetive_operative_registration_rankMiddleBottomBottom"),//Input de rankMiddleBottomBottom
                inputRankBottom = $("#pequiven_objetive_operative_registration_rankBottom"),//Input de rankBottom
                inputRankBottomTopTop = $("#pequiven_objetive_operative_registration_rankBottomTopTop"),//Input de rankBottomTopTop
                inputRankBottomTopBottom = $("#pequiven_objetive_operative_registration_rankBottomTopBottom"),//Input de rankBottomTopBottom
                inputRankBottomBottomTop = $("#pequiven_objetive_operative_registration_rankBottomBottomTop"),//Input de rankBottomBottomTop
                inputRankBottomBottomBottom = $("#pequiven_objetive_operative_registration_rankBottomBottomBottom")//Input de rankBottomBottomBottom
                ;            
           //Llamado de la función que carga los valores por defecto de la vista
           change();
           
           function change(){
                //Escondemos por defecto el boton de registrar indicadores
                buttonAddIndicator.hide();
                
                //Escondemos por defecto la sección de sumar indicadores al objetivo
                sectionIndicators.hide();
               
               //Inicializamos el select2 de Línea Estratégica
               chargeSelect2LineStrategic();
               
               //Inicializamos el select2 de Objetivo Estratégico
               chargeSelect2ObjetiveStrategic();
               
               //Inicializamos el select2 de Objetivo Táctico
               chargeSelect2ObjetiveTactic();
               
               messageLineStrategicCheckIndicator.hide();
               messageObjetiveStrategicCheckIndicator.hide();
               messageObjetiveTacticCheckIndicator.hide();
               
                //Inicializamos el select de Indicadores
                chargeSelectIndicator();
               
               //Si el usuario es de ZIV
               if(inputHiddenComplejoName.val() === 'ZIV'){
                    //Inicializamos el select2 de Complejo
                    selectComplejo.select2({
                        
                    });
                    selectComplejo.select2("enable",false);
                    
                    if(inputHiddenRoleName.val() === 'ROLE_DIRECTIVE' || inputHiddenRoleName.val() === 'ROLE_DIRECTIVE_AUX'){
                        selectGerencia.select2({
                        
                        });
                        selectGerenciaSecond.select2({
                            
                        });
                        selectGerencia.select2("enable",false);
                        selectGerenciaSecond.select2("enable",false);
                        sectionCheckGerencia.hide();
                    }
                    
                    if(inputHiddenRoleName.val() === 'ROLE_MANAGER_FIRST' || inputHiddenRoleName.val() === 'ROLE_MANAGER_FIRST_AUX'){
                        selectGerenciaSecond.select2({
                            
                        });
                        selectGerenciaSecond.select2("enable",false);
                        sectionCheckGerencia.hide();
                    }
               } else if(inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO' || inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO_AUX'){
                   selectGerencia.select2({
                       
                   });
                   selectGerenciaSecond.select2({
                       
                   });
                   selectGerencia.select2("enable",false);
                   selectGerenciaSecond.select2("enable",false);
               } else if(inputHiddenRoleName.val() === 'ROLE_MANAGER_FIRST' || inputHiddenRoleName.val() === 'ROLE_MANAGER_FIRST_AUX'){
                   selectGerenciaSecond.select2({
                       
                   });
                   displaySelectGerenciaSecondFromGerenciaFirst();
               } else if (inputHiddenRoleName.val() === 'ROLE_MANAGER_SECOND' || inputHiddenRoleName.val() === 'ROLE_MANAGER_SECOND_AUX'){
                   
               }
               
               //Incializamos el formato numerico para el input de Peso
               inputWeight.number(true,3,',','.');
               
               //Incializamos el formato numerico para el input de Meta
               inputGoal.number(true,3,',','.');
               
               //Inicializamos el formato numerico para el input de Rango Alto
               inputRankTop.number(true,3,',','.');
               inputRankTopTopTop.number(true,3,',','.');
               inputRankTopTopBottom.number(true,3,',','.');
               inputRankTopBottomTop.number(true,3,',','.');
               inputRankTopBottomBottom.number(true,3,',','.');
               inputRankMiddleTop.number(true,3,',','.');
               inputRankMiddleBottom.number(true,3,',','.');
               inputRankMiddleTopTop.number(true,3,',','.');
               inputRankMiddleTopBottom.number(true,3,',','.');
               inputRankMiddleBottomTop.number(true,3,',','.');
               inputRankMiddleBottomBottom.number(true,3,',','.');
               inputRankBottom.number(true,3,',','.');
               inputRankBottomTopTop.number(true,3,',','.');
               inputRankBottomTopBottom.number(true,3,',','.');
               inputRankBottomBottomTop.number(true,3,',','.');
               inputRankBottomBottomBottom.number(true,3,',','.');
               
               sectionTopBasic.hide();
               sectionTopCompound.hide();
               sectionMiddleBasic.hide();
               sectionMiddleCompound.hide();
               sectionBottomBasic.hide();
               sectionBottomCompound.hide();               
           }
           
            selectArrangementRangeTypeTop.click(function() {
                if ($("input[id='pequiven_objetive_operative_registration_arrangementRangeTypeTop_1']").is(':checked')) {
                    sectionTopBasic.show();
                    sectionTopCompound.hide();
                    inputHiddenTypeArrangementRangeTop.val("TOP_BASIC");
                 }
                 else {
                    sectionTopBasic.hide();
                    sectionTopCompound.show();
                    inputHiddenTypeArrangementRangeTop.val("TOP_COMPOUND");
                 }
           });
           
           selectArrangementRangeTypeMiddle.click(function() {
                if ($("input[id='pequiven_objetive_operative_registration_arrangementRangeTypeMiddle_2']").is(':checked')) {
                    sectionMiddleBasic.show();
                    sectionMiddleCompound.hide();
                    inputHiddenTypeArrangementRangeMiddle.val("MIDDLE_BASIC");
                 }
                 else {
                    sectionMiddleBasic.hide();
                    sectionMiddleCompound.show();
                    inputHiddenTypeArrangementRangeMiddle.val("MIDDLE_COMPOUND");
                 }
           });
           
           selectArrangementRangeTypeBottom.click(function() {
                if ($("input[id='pequiven_objetive_operative_registration_arrangementRangeTypeBottom_3']").is(':checked')) {
                    sectionBottomBasic.show();
                    sectionBottomCompound.hide();
                    inputHiddenTypeArrangementRangeBottom.val("BOTTOM_BASIC");
                 }
                 else {
                    sectionBottomBasic.hide();
                    sectionBottomCompound.show();
                    inputHiddenTypeArrangementRangeBottom.val("BOTTOM_COMPOUND");
                 }
           });           
           
           //Al seleccionar alguna opción en el select de Línea Estratégica
            selectLineStrategic.on("select2-selecting", function(e) {
                //chargeSelectIndicator();
                displayObjetiveStrategicFromLineStrategic(e);//Actualizamos los Objetivos Estratégicos
            })
           //Al cambiar el select de Línea Estratégica
            selectLineStrategic.change(function() {
                //chargeSelectIndicator();
                //Reiniciamos el Input de Referencia del Objetivo
                inputRef.val("");
                if(inputHiddenComplejoName.val() === 'ZIV'){
                    selectComplejo.select2("val",'');
                    selectComplejo.select2("enable",false);
                    selectGerencia.select2("val",'');
                    selectGerencia.select2("enable",false);
                    selectGerenciaSecond.select2("val",'');
                    selectGerenciaSecond.select2("enable",false);
                } else if(inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO' || inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO_AUX'){
                    selectGerencia.select2("val",'');
                    selectGerencia.select2("enable",false);
                    selectGerenciaSecond.select2("val",'');
                    selectGerenciaSecond.select2("enable",false);
                }
            });
            //Al seleccionar alguna opción en el select de Objetivo Estratégico
            selectObjetiveStrategic.on("select2-selecting", function(e) {
                displayObjetiveTacticFromObjetiveStrategic(e);
            })
            //Al cambiar el select de Objetivo Estratégico
            selectObjetiveStrategic.change(function() {
                inputRef.val("");
                if(inputHiddenComplejoName.val() === 'ZIV'){
                    selectComplejo.select2("val",'');
                    selectComplejo.select2("enable",false);
                    selectGerencia.select2("val",'');
                    selectGerencia.select2("enable",false);
                    selectGerenciaSecond.select2("val",'');
                    selectGerenciaSecond.select2("enable",false);
                } else if(inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO' || inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO_AUX'){
                    selectGerencia.select2("val",'');
                    selectGerencia.select2("enable",false);
                    selectGerenciaSecond.select2("val",'');
                    selectGerenciaSecond.select2("enable",false);
                }
            });
            //Al seleccionar alguna opción en el select de Objetivo Táctico
            selectObjetiveTactic.on("select2-selecting", function(e) {
                displayObjetiveRef(e);
                if(inputHiddenComplejoName.val() === 'ZIV'){
                    displaySelectComplejoFromObjetiveTactic(e);
                    //$("#pequiven_objetive_operative_registration_complejo").show();
                } else if(inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO' || inputHiddenRoleName.val() === 'ROLE_GENERAL_COMPLEJO_AUX'){
                    console.log('hola');
                    displaySelectGerenciaFirstFromComplejo();
                }
                chargeSelectIndicator();
            })
            
            //Al cambiar el select de Complejo
            selectComplejo.change(function() {
                if(inputHiddenRoleName.val() === 'ROLE_DIRECTIVE' || inputHiddenRoleName.val() === 'ROLE_DIRECTIVE_AUX'){
                    //displaySelectGerenciaFromComplejo();
                    displaySelectGerenciaFirstFromComplejo();
                }
            });
            
            selectGerencia.change(function() {
                if(inputHiddenRoleName.val() === 'ROLE_DIRECTIVE' || inputHiddenRoleName.val() === 'ROLE_DIRECTIVE_AUX'){
                    displaySelectGerenciaSecondFromGerenciaFirst();
                }
            })
           
           //Al hacer click sobre el check de gerencias
           checkGerencia.click(function() {
               checkAllGerencias();
           });
           
           //Al hacer click sobre el check de evaluar por indicador
            checkIndicator.click(function() {
                if(checkIndicator.is(':checked')){
                    if(selectLineStrategic.val() !== '' && selectObjetiveStrategic.val() !== '' && selectObjetiveTactic.val() !== ''){
                        buttonAddIndicator.show();
                        chargeSelectIndicator();
                        sectionIndicators.show();
                    } else{
                        if(selectLineStrategic.val() === ''){
                            messageLineStrategicCheckIndicator.show();
                        } else if(selectObjetiveStrategic.val() === ''){
                            messageObjetiveStrategicCheckIndicator.show();
                        } else if(selectObjetiveTactic.val() === ''){
                            messageObjetiveTacticCheckIndicator.show();
                        }
                    }
                } else{
                    buttonAddIndicator.hide();
                    sectionIndicators.hide();
                    messageLineStrategicCheckIndicator.hide();
                    messageObjetiveStrategicCheckIndicator.hide();
                    messageObjetiveTacticCheckIndicator.hide();
                }
            });
           
            
            //Función que carga los objetivos estratégicos de acuerdo a la línea estratégica seleccionada
            function displayObjetiveStrategicFromLineStrategic(e){
                var data = {
                   lineStrategicId: $.trim(e.val),
               };
               $.ajax({
                   type: 'post',
                   url: '{{ path("select_objetiveStrategicFromLineStrategicOperative") }}',
                   data: data,
                   success: function(data) {
                        $('#pequiven_objetive_operative_registration_parent_strategic option[value]').remove();
                        $('#pequiven_objetive_operative_registration_parent_strategic option').remove();
                        selectObjetiveStrategic.append('<option></option>');
                        
                        if(typeof data[0].empty === 'undefined'){
                            for(var i=0, total = data.length; i<total; i++){
                                selectObjetiveStrategic.append('<option value="' + data[i].id + '">' + data[i].description + '</option>');
                            }
                            $("#pequiven_objetive_operative_registration_parent_strategic").select2("val", "");
                            //Reiniciamos el select2 de Objetivo Táctico
                            $('#pequiven_objetive_operative_registration_parent option[value]').remove();
                            $('#pequiven_objetive_operative_registration_parent option').remove();
                            selectObjetiveTactic.append('<option></option>');
                            chargeSelect2ObjetiveTactic();
                            
                            if(inputHiddenComplejoName.val() === 'ZIV'){
                                //Reiniciamos el select de Complejo y desactivamos respectivamente
                                $("#pequiven_objetive_operative_registration_complejo option[value]").remove();
                                selectComplejo.select2("val","");
                                selectComplejo.select2("enable",false);
                                //Reiniciamos el select de Gerencia y desactivamos respectivamente
                                $("#pequiven_objetive_operative_registration_gerencia optgroup").remove();
                                $("#pequiven_objetive_operative_registration_gerencia option[value]").remove();
                                $("#pequiven_objetive_operative_registration_gerencia").select2("val","");
                                $("#pequiven_objetive_operative_registration_gerencia").select2("enable",false);
                                //Escondemos la sección del check de seleccionar las gerencias de los complejos seleccionados
                                sectionCheckGerencia.hide();
                            }
                            chargeSelect2ObjetiveStrategic("full");
                        } else{
                            if(typeof data[0].initial === 'undefined'){
                                chargeSelect2ObjetiveStrategic("empty");
                            } else{
                                chargeSelect2ObjetiveStrategic("initial");
                            }
                        }
                   }
                });
            }
            
            //Función que carga los objetivos tácticos de acuerdo al objetivo estratégico seleccionado
            function displayObjetiveTacticFromObjetiveStrategic(e){
                var data = {
                   objetiveStrategicId: $.trim(e.val),
               };
               $.ajax({
                   type: 'post',
                   url: '{{ path("select_objetiveTacticFromObjetiveStrategic") }}',
                   data: data,
                   success: function(data) {
                        $('#pequiven_objetive_operative_registration_parent option[value]').remove();
                        $('#pequiven_objetive_operative_registration_parent option').remove();
                        selectObjetiveTactic.append('<option></option>');
                        
                        if(typeof data[0].empty === 'undefined'){
                            for(var i=0, total = data.length; i<total; i++){
                                selectObjetiveTactic.append('<option value="' + data[i].id + '">' + data[i].description + '</option>');
                            }
                            selectObjetiveTactic.select2("val", "");
                            inputRef.val("");
                            if(inputHiddenComplejoName.val() === 'ZIV'){
                                //Reiniciamos el select de Complejo y desactivamos respectivamente
                                $("#pequiven_objetive_operative_registration_complejo option[value]").remove();
                                selectComplejo.select2("val","");
                                selectComplejo.select2("enable",false);
                                //Reiniciamos el select de Gerencia y desactivamos respectivamente
                                $("#pequiven_objetive_operative_registration_gerencia optgroup").remove();
                                $("#pequiven_objetive_operative_registration_gerencia option[value]").remove();
                                selectGerencia.select2("val","");
                                selectGerencia.select2("enable",false);
                                sectionCheckGerencia.hide();
                            }
                            chargeSelect2ObjetiveTactic("full");
                        } else{
                            if(typeof data[0].initial === 'undefined'){
                                chargeSelect2ObjetiveTactic("empty");
                            } else{
                                chargeSelect2ObjetiveTactic("initial");
                            }
                        }
                   }
                });
            }
            
            //Función que actualiza el select de complejos en caso de que el usuario logueado sea de Sede Corporativa
            function displaySelectComplejoFromObjetiveTactic(e){
                var data = {
                    objetiveTacticId: $.trim(e.val),
                };
                $.ajax({
                    type: 'post',
                    url: '{{ path("select_complejoFromObjetiveTactic") }}',
                    data: data,
                    success: function(data) {
                        var $complejo_selector = $("#pequiven_objetive_operative_registration_complejo");
                        
                        $("#pequiven_objetive_operative_registration_complejo option[value]").remove();
                        var complejos = [];
                        //Actualizamos el select de complejos
                        for(var i=0, total = data.length; i<total; i++){
                            $complejo_selector.append('<option value="' + data[i].id + '" selected="selected">' + data[i].description + '</option>');
                            complejos[i] = data[i].id;
                        }
                        
                        if(inputHiddenRoleName.val() === 'ROLE_DIRECTIVE' || inputHiddenRoleName.val() === 'ROLE_DIRECTIVE_AUX'){
                            //displaySelectGerenciaFromComplejo(complejos);
                            displaySelectGerenciaFirstFromComplejo(complejos);
                        } else if(inputHiddenRoleName.val() === 'ROLE_MANAGER_FIRST' || inputHiddenRoleName.val() === 'ROLE_MANAGER_FIRST_AUX'){
                            displaySelectGerenciaSecondFromGerenciaFirst();
                        }
                        displaySelectObjetiveStrategicFromObjetiveTactic();
                       // $("#pequiven_objetive_operative_registration_complejo").select2("val",array(1,6));
                       selectComplejo.select2({
                        });
                        selectComplejo.select2("enable",true);
                        sectionCheckGerencia.show();
                    }
                });
            }
            
            //Función que actualiza el select de objetivos estratégicos de acuerdo al objetivo táctico seleccionado
            function displaySelectObjetiveStrategicFromObjetiveTactic(){
                var data = {
                    objetiveTacticId: $.trim(selectObjetiveTactic.val()),
                    lineStrategicId: $.trim(selectLineStrategic.val()),
                };
                $.ajax({
                    type: 'post',
                    url: '{{ path("select_objetiveStrategicFromObjetiveTactic") }}',
                    data: data,
                    success: function(data) {                        
                        $("#pequiven_objetive_operative_registration_parent_strategic option[value]").remove();
                        selectObjetiveStrategic.select2("val",'');
                        //Actualizamos el select de objetivo estratégico
                        for(var i=0, total = data.length; i<total; i++){
                            if(data[i].selected == 'YES'){
                                selectObjetiveStrategic.append('<option value="' + data[i].id + '" selected="selected">' + data[i].description + '</option>');
                            } else{
                                selectObjetiveStrategic.append('<option value="' + data[i].id + '">' + data[i].description + '</option>');
                            }
                        }
                        selectObjetiveStrategic.select2({
                        });
                        for(var i=0, total = data.length; i<total; i++){
                            if(data[i].selected == 'YES'){
                                selectObjetiveStrategic.select2("val",data[i].id);
                            }
                        }
                    }
                });
            }
            
            //Función que actualiza el select de gerencia en caso de que el usuario logueado sea de Sede Corporativa
            function displaySelectGerenciaFromComplejo(complejos){
            var data = '';
                if(complejos instanceof Array){//En caso de que la data provenga al momento de cambiar el select de Objetivo Táctico
                    var dataComplejo = '';
                    var totalComplejos = complejos.length;
                    for(var i=0, total = complejos.length; i<total; i++){
                        if(i == (totalComplejos - 1)){
                            dataComplejo = dataComplejo + complejos[i];
                        } else{
                            dataComplejo = dataComplejo + complejos[i] + ',';
                        }
                    }
                    data = {
                        complejos: dataComplejo,
                    };
                } else{
                    data = {
                        complejos: $.trim(selectComplejo.val()),
                    };
                }
                $.ajax({
                    type: 'post',
                    url: '{{ path("select_gerenciaFromComplejoOperative") }}',
                    data: data,
                    success: function(data) {
                        var $gerencia_selector = $("#pequiven_objetive_operative_registration_gerencia");

                        $("#pequiven_objetive_operative_registration_gerencia optgroup").remove();
                        $("#pequiven_objetive_operative_registration_gerencia option[value]").remove();

                        //Actualizamos el select de gerencias
                        var cantidad = data.length;
                        var text = '';
                        text = text + '<optgroup label="' + data[0].optGroup + '">';
                         for(var i=0, total = data.length; i<total; i++){
                             if(i == 0){
                                 text = text + '<option value="' + data[i].id + '" >' + data[i].description + '</option>';
                             } else if (data[i].idComplejo != data[i-1].idComplejo && (i + 1) < cantidad ){
                                 text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" >' + data[i].description + '</option>';
                             } else if (data[i].idComplejo != data[i-1].idComplejo && (i + 1) == cantidad ){
                                 text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" >' + data[i].description + '</option> </optgroup>';
                             } else if ((i+1) == cantidad){
                                 text = text +'<option value="' + data[i].id + '" >' + data[i].description + '</option> </optgroup>';
                             } else{
                                 text = text + '<option value="' + data[i].id + '" >' + data[i].description + '</option>';
                             }
                         }
                         selectGerencia.append(text);
                         selectGerencia.select2({
                         });
                         selectGerencia.select2("enable",true);
                         sectionCheckGerencia.show();
                    }
                 });
            }
            
            //Función que actualiza el select de gerencia de 1ra línea en caso de que el usuario logueado sea de Sede Corporativa
            function displaySelectGerenciaFirstFromComplejo(complejos){
            var data = '';
                if(complejos instanceof Array){//En caso de que la data provenga al momento de cambiar el select de Objetivo Táctico
                    var dataComplejo = '';
                    var totalComplejos = complejos.length;
                    for(var i=0, total = complejos.length; i<total; i++){
                        if(i == (totalComplejos - 1)){
                            dataComplejo = dataComplejo + complejos[i];
                        } else{
                            dataComplejo = dataComplejo + complejos[i] + ',';
                        }
                    }
                    data = {
                        complejos: dataComplejo,
                        objetiveTacticId: $.trim(selectObjetiveTactic.val()),
                    };
                } else{
                    data = {
                        complejos: $.trim(selectComplejo.val()),
                        objetiveTacticId: $.trim(selectObjetiveTactic.val()),
                    };
                }
                $.ajax({
                    type: 'post',
                    url: '{{ path("select_gerenciaFirstFromComplejoOperative") }}',
                    data: data,
                    success: function(data) {

                        $("#pequiven_objetive_operative_registration_gerencia optgroup").remove();
                        $("#pequiven_objetive_operative_registration_gerencia option[value]").remove();

                        //Actualizamos el select de gerencias
                        var cantidad = data.length;
                        var gerencias = [];
                        
                        var text = '';
                        text = text + '<optgroup label="' + data[0].optGroup + '">';
                        //$gerencia_selector.append('<optgroup label="' + data[0].optGroup + '">');
                         for(var i=0, total = data.length; i<total; i++){
                             if(i == 0){
                                 text = text + '<option value="' + data[i].id + '" selected="selected">' + data[i].description + '</option>';
                             } else if (data[i].idComplejo != data[i-1].idComplejo && (i + 1) < cantidad ){
                                 text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" selected="selected">' + data[i].description + '</option>';
                             } else if (data[i].idComplejo != data[i-1].idComplejo && (i + 1) == cantidad ){
                                 text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" selected="selected">' + data[i].description + '</option> </optgroup>';
                             } else if ((i+1) == cantidad){
                                 text = text +'<option value="' + data[i].id + '" selected="selected">' + data[i].description + '</option> </optgroup>';
                             } else{
                                 text = text + '<option value="' + data[i].id + '" selected="selected">' + data[i].description + '</option>';
                             }
                             gerencias[i] = data[i].id;
                         }
                         selectGerencia.append(text);
                         selectGerencia.select2({
                         });
                         selectGerencia.select2("enable",true);
                         sectionCheckGerencia.show();
                         displaySelectGerenciaSecondFromGerenciaFirst(gerencias);
                    }
                 });
            }
            
            //Función que actualiza el select de gerencia de 2da línea en caso de que el usuario logueado sea de Sede Corporativa
            function displaySelectGerenciaSecondFromGerenciaFirst(gerencias){
                var data = '';
                if(gerencias instanceof Array){//En caso de que la data provenga al momento de cambiar el select de Objetivo Táctico
                    var dataGerencia = '';
                    var totalGerencias = gerencias.length;
                    for(var i=0, total = gerencias.length; i<total; i++){
                        if(i == (totalGerencias - 1)){
                            dataGerencia = dataGerencia + gerencias[i];
                        } else{
                            dataGerencia = dataGerencia + gerencias[i] + ',';
                        }
                    }
                    data = {
                        gerencias: dataGerencia,
                        complejos: $.trim(selectComplejo.val()),
                    };
                } else{
                    data = {
                        gerencias: $.trim(selectGerencia.val()),
                        complejos: $.trim(selectComplejo.val()),
                    };
                }
                $.ajax({
                    type: 'post',
                    url: '{{ path("select_gerenciaSecondFromGerenciaFirstOperative") }}',
                    data: data,
                    success: function(data) {

                        $("#pequiven_objetive_operative_registration_gerenciaSecond optgroup").remove();
                        $("#pequiven_objetive_operative_registration_gerenciaSecond option[value]").remove();

                        //Actualizamos el select de gerencias
                        var cantidad = data.length;
                        
                        var text = '';
                        text = text + '<optgroup label="' + data[0].optGroup + '">';
                        //$gerencia_selector.append('<optgroup label="' + data[0].optGroup + '">');
                         for(var i=0, total = data.length; i<total; i++){
                             if(i == 0){
                                 text = text + '<option value="' + data[i].id + '">' + data[i].description + '</option>';
                             } else if (data[i].idGroup != data[i-1].idGroup && (i + 1) < cantidad ){
                                 text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '">' + data[i].description + '</option>';
                             } else if (data[i].idGroup != data[i-1].idGroup && (i + 1) == cantidad ){
                                 text = text + '</optgroup> <optgroup label="' + data[i].optGroup + '">' +'<option value="' + data[i].id + '" >' + data[i].description + '</option> </optgroup>';
                             } else if ((i+1) == cantidad){
                                 text = text +'<option value="' + data[i].id + '">' + data[i].description + '</option> </optgroup>';
                             } else{
                                 text = text + '<option value="' + data[i].id + '">' + data[i].description + '</option>';
                             }
                         }
                         selectGerenciaSecond.append(text);
                         selectGerenciaSecond.select2({
                         });
                         selectGerenciaSecond.select2("enable",true);
                         sectionCheckGerencia.show();
                    }
                 });
            }
                        
            //Función que muestra el Número de Referencia del objetivo a crear, de acuerdo al táctico seleccionado
            function displayObjetiveRef(e){
                var data = {
                    objetiveTacticId: $.trim(e.val)
                };
                $.ajax({
                    type: 'post',
                    url: '{{ path("displayRefObjetiveOperative") }}',
                    data: data,
                    success: function(data) {
                        inputRef.val(data[0].ref);
                    }
                 });
            }
            
            //Función que "marca" todas las gerencias de los complejos seleccionados
            function checkAllGerencias(){
                if(checkGerencia.is(':checked')){
                    selectGerenciaSecond.select2("val",'');
                    selectGerenciaSecond.select2("enable",false);
                } else{
                    selectGerenciaSecond.select2("enable",true);
                }
            }
            
            //Agarrar este select como ejemplo para los demás select2
            //Función que actualiza el select de indicadores en caso de acuerdo a la referencia del objetivo a crear o cuando se agregue un nuevo indicador a partir de este formulario
            function chargeSelectIndicator(){
                var data = {
                    refParentId: $.trim(inputRef.val())
                };
                $.ajax({
                    type: 'post',
                    url: '{{ path("select_indicatorOperativeFromRefParent") }}',
                    data: data,
                    success: function(data) {                        
                        $('#pequiven_objetive_operative_registration_indicators option[value]').remove();
                        $('#pequiven_objetive_operative_registration_indicators').select2("val",'');
                        
                        if(typeof data[0].empty === 'undefined'){
                            for(var i=0, total = data.length; i<total; i++){
                                selectIndicators.append('<option value="' + data[i].id + '">' + data[i].description + '</option>');
                            }
                            chargeSelect2Indicators("full");
                        } else{
                            chargeSelect2Indicators("empty");
                        }
                    }
                });
            }
            
           //Función que carga el select2 de Línea Estratégica
            function chargeSelect2LineStrategic(type){
                selectLineStrategic.select2({
                    placeholder: '{{ 'form.messages.selectLineStrategicPlaceholder'|trans }}',
                    formatNoMatches: function(term) {
                        if(type == 'full'){
                            return "{{ 'form.messages.selectLineStrategicFormatNoMatcher'|trans }}";
                        } else{
                            return "{{ 'form.messages.selectLineStrategicFormatNoResult'|trans }}";
                        }
                    }
                });
            }
            
            //Función que carga el select2 de Objetivo Estratégico
            function chargeSelect2ObjetiveStrategic(type){
                selectObjetiveStrategic.select2({
                    placeholder: '{{ 'form.messages.selectObjetiveStrategicPlaceholder'|trans }}',
                    formatNoMatches: function(term) {
                        if(type == 'full'){
                            return "{{ 'form.messages.selectObjetiveStrategicFormatNoMatcher'|trans }}";
                        } else if (type == 'empty'){
                            return "{{ 'form.messages.selectObjetiveStrategicFormatNoResult'|trans }}";
                        } else {
                            return "{{ 'form.messages.selectObjetiveStrategicFormatNoMatcher'|trans }}";
                        }
                    }
                });
            }
            
            //Función que carga el select2 de Objetivo Táctico
            function chargeSelect2ObjetiveTactic(type){
                selectObjetiveTactic.select2({
                    placeholder: '{{ 'form.messages.selectObjetiveTacticPlaceholder'|trans }}',
                    formatNoMatches: function(term) {
                        if(type == 'full'){
                            return "{{ 'form.messages.selectObjetiveTacticFormatNoMatcher'|trans }}";
                        } else if (type == 'empty'){
                            return "{{ 'form.messages.selectObjetiveTacticFormatNoResult'|trans }}";
                        } else {
                            return "{{ 'form.messages.selectObjetiveTacticFormatNoMatcher'|trans }}";
                        }
                    }
                });
            }
           
           //Función que carga el select2 de Indicadores
           function chargeSelect2Indicators(type){
                selectIndicators.select2({
                    placeholder: '{{ 'form.selectIndicatorPlaceholder'|trans ({}, 'PequivenIndicatorBundle') }}',
                    formatNoMatches: function(term) {
                        if(type == 'full'){
                            return "<a href='#lineStrategic'>{{ 'form.selectIndicatorFormatNoMatcher'|trans ({}, 'PequivenIndicatorBundle') }}</a>";
                        } else{
                            return "<a href='#lineStrategic'>{{ 'form.selectIndicatorFormatNoResult'|trans ({}, 'PequivenIndicatorBundle') }}</a>";
                        }
                    }
                });
           }
            
        });
    </script>
    
    <script>
        
        function indicatorsRegisterSuccessful(){
            $("#modals").remove();
            //document.scripts.chargeSelectIndicator();
            document.chargeSelectIndicator();
        }

        function openAlert(){
            $.modal({
                title: '{{ 'pequiven_indicator.titleFrameAddOperative'|trans ({}, 'PequivenIndicatorBundle') }}',
                url: '{{ path("pequiven_indicator_add_operative_from_objetive") }}' ,
                useIframe: true,
                height: '800',
                width: '600',
                buttons: {
                        'Cerrar': {
                            classes:	'red-gradient glossy full-width',
                            click:      function(win) { win.closeModal(); }
                        }
                    }
            });
        
            /**
            $.modal.alert('Indicador',{
                    buttons: {
                        'Cerrar': {
                            classes:	'red-gradient glossy full-width',
                            click:      function(win) { win.closeModal(); }
                        }
                    }
                });
            **/
        };
        
    </script>    
    {% endblock javascript %}
{% endblock body %}