parameters:
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
    
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
    acl:
        connection: default
    role_hierarchy:
        ROLE_SEIP:
            - ROLE_SEIP_PRE_PLANNING_CREATE_TACTIC
            - ROLE_SEIP_PRE_PLANNING_CREATE_OPERATIVE
            - ROLE_SEIP_PRE_PLANNING_CREATE_REVIEW
            - ROLE_SEIP_PRE_PLANNING_IMPORT_MATRIX
            
            - ROLE_SEIP_OBJETIVE_VIEW_STRATEGIC
            - ROLE_SEIP_OBJETIVE_VIEW_TACTIC
            - ROLE_SEIP_OBJETIVE_VIEW_OPERATIVE
            - ROLE_SEIP_OBJETIVE_VIEW_MATRIX_OBJECTIVES
            - ROLE_SEIP_OBJETIVE_CREATE_STRATEGIC
            - ROLE_SEIP_OBJETIVE_CREATE_TACTIC
            - ROLE_SEIP_OBJETIVE_CREATE_OPERATIVE
            
            - ROLE_SEIP_ARRANGEMENT_PROGRAM_VIEW_LIST
            - ROLE_SEIP_ARRANGEMENT_PROGRAM_VIEW_ASSIGNED
            
        ROLE_API: ROLE_USER
        ROLE_INDICATOR: [ROLE_INDICATOR_READ,ROLE_INDICATOR_ADD_RESULT]
        ROLE_ARRANGEMENT_PROGRAM: [ROLE_ARRANGEMENT_PROGRAM_EDIT,ROLE_ARRANGEMENT_PROGRAM_DELETE,ROLE_ARRANGEMENT_PROGRAM_READ,ROLE_ARRANGEMENT_PROGRAM_CLEARANCE]
        ROLE_PLANNING: [ROLE_PLANNING_RECALCULATE_RESULT]
        ROLE_VIEW: [ROLE_WORKER_PQV,ROLE_WORKER_PLANNING]
        ROLE_ADMIN: [ROLE_DIRECTIVE,ROLE_DIRECTIVE_AUX,ROLE_GENERAL_COMPLEJO,ROLE_GENERAL_COMPLEJO_AUX,ROLE_MANAGER_FIRST,ROLE_MANAGER_FIRST_AUX,ROLE_MANAGER_SECOND,ROLE_MANAGER_SECOND_AUX,ROLE_SUPERVISER,ROLE_WORKER_PQV,ROLE_VIEW,ROLE_ARRANGEMENT_PROGRAM,ROLE_API,ROLE_INDICATOR,ROLE_SONATA_ADMIN,ROLE_PLANNING,ROLE_SEIP]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN,ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js|compiled|translations)/
            security: false
        login_firewall:
            pattern: ^/(login$|register|resetting)
            anonymous: ~
        cache:
            pattern: ^/media/cache
            security: false
        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false
        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            # Add your favorite authentication process here
            form_login:
                provider: fos_userbundle
                check_path: /oauth/v2/auth_login_check
                login_path: /oauth/v2/auth_login
        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true
            anonymous:  false # can be omitted as its default value
        main:
            pattern: ^/
            anonymous: false
            switch_user: { role: ROLE_SUPER_ADMIN }
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
            logout:
                path:   fos_user_security_logout
                target: fos_user_security_login
                
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true

    access_control:
        - { path: ^/compiled, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/translations, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
            
             # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: ROLE_SONATA_ADMIN }
        
        - { path: ^/planning/, role: ROLE_WORKER_PLANNING }
        - { path: ^/api, roles: [ ROLE_API ] }
        - { path: ^/, role: IS_AUTHENTICATED_FULLY }
